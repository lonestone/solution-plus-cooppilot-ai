name: Deploy To ECS

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      ecs_cluster:
        required: true
        type: string
      build_dir:
        required: true
        type: string
      dockerfile_dir:
        required: false
        type: string
        default: '.'
      build_context:
        required: false
        type: string
        default: '.'
      aws_region:
        required: true
        type: string
      environment:
        required: true
        type: string
      review_mode:
        required: false
        type: boolean
        default: false
      build_args:
        required: false
        type: string
        default: "['no_op=true']"

jobs:
  deploy_to_ecs:
    name: Deploy to ECS
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN_FOR_SUBMODULE }}

      - name: Init AWS ECR / ECS
        id: init-ecr-ecs
        uses: ./.github/actions/init-ecr-ecs
        with:
          app_name: ${{ inputs.app_name }}
          aws_region: ${{ inputs.aws_region }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
      - name: debug outputs
        run: |
          echo "ECR_REGISTRY: ${{ steps.init-ecr-ecs.outputs.ecr_registry }}"
          echo "ECR_REPOSITORY: ${{ steps.init-ecr-ecs.outputs.ecr_repository }}"
          echo "ECS_SERVICE: ${{ steps.init-ecr-ecs.outputs.ecs_service }}"
          echo "CONTAINER_NAME: ${{ steps.init-ecr-ecs.outputs.container_name }}"

      - name: Test echo AWS creds
        run: |
          echo "AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}"

      - name: debug inputs
        run: |
          echo "APP_NAME: ${{ inputs.app_name }}"
          echo "BUILD_DIR: ${{ inputs.build_dir }}"
          echo "DOCKERFILE_DIR: ${{ inputs.dockerfile_dir }}"
          echo "AWS_REGION: ${{ inputs.aws_region }}"
          echo "REVIEW_MODE: ${{ inputs.review_mode }}"
        if: ${{ inputs.review_mode == false }}
          echo "REVIEW_MODE -> ${{ inputs.review_mode }}"

      - name: Build and Push Docker Image to ECR
        id: build-push-ecr-docker-image
        uses: ./.github/actions/build-push-ecr-docker-image
        with:
          ecr_registry: ${{ steps.init-ecr-ecs.outputs.ecr_registry }}
          ecr_repository: ${{ steps.init-ecr-ecs.outputs.ecr_repository }}
          build_dir: ${{ inputs.build_dir }}
          dockerfile_dir: ${{ inputs.dockerfile_dir }}
          build_context: ${{ inputs.build_context }}
          push_image: ${{ inputs.review_mode == false }}
          build_args: ${{ inputs.build_args}}
    
      - name: Deploy ECS Task Definition
        if: ${{ inputs.review_mode == false }}
        uses: ./.github/actions/deploy-ecs-task-definition
        with:
          ecs_cluster: ${{ inputs.ecs_cluster }}
          app_name: ${{ inputs.app_name }}
          container_name: ${{ steps.init-ecr-ecs.outputs.container_name }}
          ecs_service: ${{ steps.init-ecr-ecs.outputs.ecs_service }}
          aws_region: ${{ inputs.aws_region }}
          image: ${{ steps.build-push-ecr-docker-image.outputs.image }}
